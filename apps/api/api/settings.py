"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import sys
from pathlib import Path

import environ


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
PROJECT_DIR = BASE_DIR / 'api'
APPS_DIR = PROJECT_DIR / 'apps'
TEMPLATES_DIR = BASE_DIR / 'templates'
STATIC_DIR = BASE_DIR / 'static'
COLLECTSTATIC_OUTPUT_DIR = BASE_DIR / 'staticfiles'
MEDIA_DIR = BASE_DIR / 'media'
FIXTURES_DIR = BASE_DIR / 'fixtures'

ENV_FILE_NAME = '.env'
ENV_FILE = BASE_DIR / ENV_FILE_NAME
print(f'\n{"*" * 50}\nReading env vars from {ENV_FILE}\n{"*" * 50}\n')

sys.path.insert(0, str(APPS_DIR))

env = environ.Env()
env.read_env(str(ENV_FILE))

# Sites framework
SITE_ID = 1

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=False)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

ADMINS = []
MANAGERS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.postgres',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # Project
    'common.apps.CommonConfig',
    'divisions.apps.DivisionsConfig',
    'games.apps.GamesConfig',
    'seasons.apps.SeasonsConfig',
    'teams.apps.TeamsConfig',
    'users.apps.UsersConfig',

    # 3rd party
    'django_extensions',
    'django_filters',
    'import_export',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'common.middleware.TimezoneMiddleware',
]

if DEBUG:
    INSTALLED_APPS.append('debug_toolbar')
    MIDDLEWARE.insert(0, 'debug_toolbar.middleware.DebugToolbarMiddleware')
    DEBUG_TOOLBAR_CONFIG = {
        'SHOW_COLLAPSED': True,
        'SHOW_TOOLBAR_CALLBACK': lambda request: DEBUG
    }

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASE_URL = env.db_url()
DATABASE_URL.update({
    'OPTIONS': {
        'client_encoding': 'UTF8'
    },
    'TEST': {
        'CHARSET': 'UTF8'
    }
})
DATABASES = {
    'default': DATABASE_URL
}

# Email
EMAIL_CONFIG = env.email_url()
EMAIL_SUBJECT_PREFIX = '[BTSH] '
vars().update(EMAIL_CONFIG)
DEFAULT_FROM_EMAIL = 'webmaster@btsh.org'
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Auth

AUTH_USER_MODEL = 'users.User'
LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

# https://docs.djangoproject.com/en/5.1/topics/i18n/timezones/#default-time-zone-and-current-time-zone

TIME_ZONE = 'UTC'
# Django displays datetimes as UTC (i.e. in the django admin), to make it easier for end users we automatically
# "activate" the NY timezone (see TimezoneMiddleware). We don't need to handle different timezones per user right now
DEFAULT_USER_TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = COLLECTSTATIC_OUTPUT_DIR
STATICFILES_DIRS = [STATIC_DIR]

# Media files (user uploaded, team logos, etc)
# https://docs.djangoproject.com/en/5.1/topics/files/

MEDIA_URL = 'media/'
MEDIA_ROOT = MEDIA_DIR

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CSRF

CSRF_COOKIE_SECURE = env.bool('CSRF_COOKIE_SECURE')

# Security

SECURE_BROWSER_XSS_FILTER = True
SECURE_SSL_REDIRECT = env.bool('SECURE_SSL_REDIRECT')
SESSION_COOKIE_AGE = 1209600 * 2  # 4 weeks
SESSION_COOKIE_SECURE = env.bool('SESSION_COOKIE_SECURE')
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Django import export
IMPORT_EXPORT_TMP_STORAGE_CLASS = 'import_export.tmp_storages.MediaStorage'

# Django rest framework
REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
}
